---
include:
  - remote: "https://raw.githubusercontent.com/miquido/gitlab-templates/1.3.63/docker-toolkit.yml"
  - remote: "https://raw.githubusercontent.com/miquido/gitlab-templates/1.3.63/terraform-toolkit.yml"
  - remote: "https://raw.githubusercontent.com/miquido/gitlab-templates/1.3.63/git-toolkit.yml"
  - remote: "https://raw.githubusercontent.com/miquido/gitlab-templates/1.3.63/gitlab-toolkit.yml"

variables:
  DOCKER_DRIVER: "overlay2"
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_BUILD_IMAGE: $CI_REGISTRY_IMAGE:$CI_PIPELINE_IID
  NAMESPACE: "terraform"
  REPOSITORY: "registry.miquido.net" # local miquido docker registry

.job_template: &job_template
  image: docker:20.10.6
  tags:
    - docker
    - miquido

stages:
  - build
  - test
  - push

get-latest-terraform:
  extends: .get-latest-terraform

check-formatting:
  extends: .check-formatting

validate:
  extends: .validate-terraform
  variables:
    ENVIRONMENTS: examples/complete
#
#bump-tag:
#  extends: .bump_minor_tag

docker-lint:
  variables:
    DEFAULT_IGNORES: "DL3018 DL3008"
    DOCKERFILE: "docker/Dockerfile"
  extends: .docker-lint
#
#docker-build:
#  <<: *job_template
#  stage: build
#  script:
#    - docker build --tag="${DOCKER_BUILD_IMAGE}" docker/.
#    - docker push "${DOCKER_BUILD_IMAGE}"

#container-scanning:
#  extends: .container-scanning
#  stage: test

miquido-ci-schema-validation:
  stage: test
  extends: .miquido-ci-schema-validation

build:
  image: jdrouet/docker-with-buildx:stable
  stage: build
  environment:
    name: prod
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker buildx create --use
    - docker buildx build --push --platform linux/arm64/v8,linux/386,linux/amd64 --tag $DOCKER_BUILD_IMAGE docker/.
  tags:
    - docker
    - miquido

push:
  environment:
    name: prod
  stage: push
  image: docker:20.10.14
  variables:
    DOCKER_HUB_IMAGE: "miquidocompany/aws-ecs-bastion:${CI_JOB_ID}-${CI_COMMIT_SHORT_SHA}"
  before_script:
    - |
      apk add --no-cache \
              curl \
              jq \
              python3 \
              py3-pip \
            && pip3 install --upgrade pip \
            && pip3 install --no-cache-dir \
                awscli \
            && rm -rf /var/cache/apk/*
    - curl -L https://github.com/regclient/regclient/releases/latest/download/regctl-linux-amd64 > regctl
    - chmod 755 regctl
    - mkdir ~/.docker
  script:
    - echo $DOCKER_USER
    - echo $DOCKER_KEY
    - docker login -u $DOCKER_USER -p $DOCKER_KEY
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - ./regctl image inspect $DOCKER_BUILD_IMAGE
    - ./regctl image copy $DOCKER_BUILD_IMAGE $DOCKER_HUB_IMAGE
    - ./regctl image inspect $DOCKER_HUB_IMAGE
  tags:
    - miquido
    - docker
  rules:
    - when: manual
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#      when: manual

---
include:
  - remote: "https://raw.githubusercontent.com/miquido/gitlab-templates/1.3.94/docker-toolkit.yml"
  - remote: "https://raw.githubusercontent.com/miquido/gitlab-templates/1.3.94/terraform-toolkit.yml"
  - remote: "https://raw.githubusercontent.com/miquido/gitlab-templates/1.3.94/git-toolkit.yml"
  - remote: "https://raw.githubusercontent.com/miquido/gitlab-templates/1.3.94/gitlab-toolkit.yml"


variables:
  DOCKER_DRIVER: "overlay2"
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_BUILD_IMAGE: $CI_REGISTRY_IMAGE:$CI_PIPELINE_IID
  NAMESPACE: "terraform"
  REPOSITORY: "registry.miquido.net" # local miquido docker registry

.job_template: &job_template
  image: docker:20.10.6
  tags:
    - docker
    - miquido

stages:
  - build
  - test
  - push
  - docs

get-latest-terraform:
  extends: .get-latest-terraform

check-formatting:
  extends: .check-formatting

validate:
  extends: .validate-terraform
  variables:
    ENVIRONMENTS: examples/complete

bump-tag:
  stage: push
  extends: .bump_minor_tag

docker-lint:
  variables:
    DEFAULT_IGNORES: "DL3018 DL3008"
    DOCKERFILE: "docker/Dockerfile"
  extends: .docker-lint

container-scanning:
  before_script:
    - !reference [.gitlab-docker-login, script]
  extends: .container-scanning
  stage: test

miquido-ci-schema-validation:
  stage: test
  extends: .miquido-ci-schema-validation

build:
  extends: .build-multiarch
  stage: build
  variables:
    DOCKERFILE_PATH: docker/.
    PLATFORMS: linux/arm/v7,linux/arm64/v8,linux/amd64

push:
  extends: .gitlab-dockerhub-push
  stage: push
  environment:
    name: prod
  variables:
    DOCKER_IMAGE_DESTINATION: "miquido/aws-ecs-bastion:${CI_JOB_ID}-${CI_COMMIT_SHORT_SHA}"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
  allow_failure: true

docs:
  extends: .generate_readme
  stage: docs

push_readme:
  extends: .push_readme
  stage: .post
  dependencies: ["docs"]

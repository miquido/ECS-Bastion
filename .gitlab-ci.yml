---
include:
  - remote: "https://raw.githubusercontent.com/miquido/gitlab-templates/1.3.63/docker-toolkit.yml"
  - remote: "https://raw.githubusercontent.com/miquido/gitlab-templates/1.3.63/terraform-toolkit.yml"
  - remote: "https://raw.githubusercontent.com/miquido/gitlab-templates/1.3.63/git-toolkit.yml"
  - remote: "https://raw.githubusercontent.com/miquido/gitlab-templates/1.3.63/gitlab-toolkit.yml"

.dockerhub-login:
  script:
    - \[ ! -n "$DOCKER_USER" \] && echo "Missing DOCKER_USER variable. Exiting" && exit 1
    - \[ ! -n "$DOCKER_KEY" \] && echo "Missing DOCKER_KEY variable. Exiting" && exit 1
    - docker login -u $DOCKER_USER -p $DOCKER_KEY

.gitlab-docker-login:
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

.ecr-login:
  script:
    - \[ ! -n "$ECR_ID" \] && echo "Missing ECR_ID variable. Exiting" && exit 1
    - aws ecr get-login-password | docker login --username AWS --password-stdin $ECR_ID

variables:
  DOCKER_DRIVER: "overlay2"
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_BUILD_IMAGE: $CI_REGISTRY_IMAGE:$CI_PIPELINE_IID
  NAMESPACE: "terraform"
  REPOSITORY: "registry.miquido.net" # local miquido docker registry

.job_template: &job_template
  image: docker:20.10.6
  tags:
    - docker
    - miquido

stages:
  - build
  - test
  - push

get-latest-terraform:
  extends: .get-latest-terraform

check-formatting:
  extends: .check-formatting

validate:
  extends: .validate-terraform
  variables:
    ENVIRONMENTS: examples/complete

bump-tag:
  stage: push
  extends: .bump_minor_tag

docker-lint:
  variables:
    DEFAULT_IGNORES: "DL3018 DL3008"
    DOCKERFILE: "docker/Dockerfile"
  extends: .docker-lint

container-scanning:
  before_script:
    - !reference [.gitlab-docker-login, script]
  extends: .container-scanning
  stage: test

miquido-ci-schema-validation:
  stage: test
  extends: .miquido-ci-schema-validation

.build-multiarch:
  image: jdrouet/docker-with-buildx:stable
  variables:
    DOCKERFILE_PATH: .
  script:
    - !reference [.gitlab-docker-login, script]
    - docker buildx create --use
    - docker buildx build --push --platform linux/arm/v7,linux/arm64/v8,linux/386,linux/amd64 --tag $DOCKER_BUILD_IMAGE $DOCKERFILE_PATH
  tags:
    - docker
    - miquido


.gitlab-dockerhub-push:
  extends: .gitlab-push
  script:
   - \[ ! -n "$DOCKER_IMAGE_DESTINATION" \] && echo "Missing DOCKER_IMAGE_DESTINATION variable. Exiting" && exit 1
   - !reference [.dockerhub-login, script]
   - !reference [.gitlab-push, script]

.gitlab-ecr-push:
  extends: .gitlab-push
  script:
   - \[ ! -n "$DOCKER_IMAGE_DESTINATION" \] && echo "Missing DOCKER_IMAGE_DESTINATION variable. Exiting" && exit 1
   - !reference [.ecr-login, script]
   - !reference [.gitlab-push, script]


.gitlab-push:
  image: docker:20.10.14
  variables:
    # REQUIRED
    DOCKER_IMAGE_DESTINATION: ""
  before_script:
    - |
      apk add --no-cache \
              curl \
              jq \
              python3 \
              py3-pip \
            && pip3 install --upgrade pip \
            && pip3 install --no-cache-dir \
                awscli \
            && rm -rf /var/cache/apk/*
    - curl -L https://github.com/regclient/regclient/releases/latest/download/regctl-linux-amd64 > regctl
    - chmod 755 regctl
    - mkdir ~/.docker
  script:
    - !reference [.gitlab-docker-login, script]
    - ./regctl image inspect $DOCKER_BUILD_IMAGE
    - ./regctl image copy $DOCKER_BUILD_IMAGE $DOCKER_IMAGE_DESTINATION
    - ./regctl image inspect $DOCKER_IMAGE_DESTINATION
  tags:
    - miquido
    - docker
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: on_success

build:
  extends: .build-multiarch
  stage: build
  variables:
    DOCKERFILE_PATH: docker/.

push:
  extends: .gitlab-dockerhub-push
  stage: push
  environment:
    name: prod
  variables:
    DOCKER_IMAGE_DESTINATION: "miquidocompany/aws-ecs-bastion:${CI_JOB_ID}-${CI_COMMIT_SHORT_SHA}"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
